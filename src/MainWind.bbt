REM >!MainWind
REM
REM Copyright 2020, Stephen Fryatt (info@stevefryatt.org.uk)
REM
REM This file is part of Clipper:
REM
REM   http://www.stevefryatt.org.uk/software/
REM
REM Licensed under the EUPL, Version 1.1 only (the "Licence");
REM You may not use this work except in compliance with the
REM Licence.
REM
REM You may obtain a copy of the Licence at:
REM
REM   http://joinup.ec.europa.eu/software/page/eupl
REM
REM Unless required by applicable law or agreed to in
REM writing, software distributed under the Licence is
REM distributed on an "AS IS" basis, WITHOUT WARRANTIES
REM OR CONDITIONS OF ANY KIND, either express or implied.
REM
REM See the Licence for the specific language governing
REM permissions and limitations under the Licence.


REM Load the main window template and initialise the variables.
:
DEF PROCmain_wind_initialise
PROCtemplate_load_claim("Main", b%, 1024, -1)
SYS "Wimp_CreateWindow",,b% TO MainWindHandle%

REM The icon handles.

MainWindFileSprIcon% = 0
MainWindFileTypeIcon% = 2
MainWindFileNameIcon% = 3
MainWindOKIcon% = 4
MainWindOwnerIcon% = 6
MainWindProtoIcon% = 7
ENDPROC


REM Handle clicks in the main window.
REM
REM \param button%	The mouse button used for the click.
REM \param icon%	The icon over which the click occurred.
:
DEF PROCmain_wind_click(button%, icon%)
IF button% <> 4 THEN ENDPROC

CASE icon% OF
WHEN MainWindOKIcon%
	PROCclipboard_save_data(FNmain_wind_get_filename, TRUE, FALSE)
WHEN MainWindFileSprIcon%
	PROCmain_wind_drag_icon(MainWindHandle%, MainWindFileSprIcon%)
ENDCASE
ENDPROC

REM Toggle the state of the main window, opening it if it
REM is closed, or closing it if it is open.
:
DEF PROCmain_window_toggle
!q% = MainWindHandle%
SYS "Wimp_GetWindowState",,q%

IF q%!32 AND (1<<17) THEN
	SYS "Wimp_CloseWindow",,q%
ELSE
	q%!28 = -1
	SYS "Wimp_OpenWindow",,q%
	PROCicon_put_caret_at_end(MainWindHandle%, MainWindFileNameIcon%)
ENDIF
ENDPROC


REM Close the main window.
:
DEF PROCmain_wind_close
PROCwindow_close(MainWindHandle%)
ENDPROC


REM Set the content fields to reflect the current clipboard content.
REM
REM \param filename$	The filename of the content.
REM \param taskname$	The name of the task owning the content.
REM \param filetype%	The filetype of the content, or -1 for none.
:
DEF PROCmain_wind_set_content(filename$, taskname$, filetype%)
LOCAL sprite$, validation%

PROCicon_set_indirected_text(MainWindHandle%, MainWindFileNameIcon%, filename$)
PROCicon_set_indirected_text(MainWindHandle%, MainWindOwnerIcon%, taskname$)
PROCicon_set_indirected_text(MainWindHandle%, MainWindFileTypeIcon%, FNtypes_name_from_type(filetype%))

sprite$ = FNtypes_sprite_from_type(filetype%)
validation% = FNicon_validation(MainWindHandle%, MainWindFileSprIcon%)
IF validation% <> 0 THEN $validation% = "S" + sprite$ + ";R2"

SYS "Wimp_GetCaretPosition",,q%
IF q%!0 = MainWindHandle% THEN PROCicon_put_caret(q%!0, q%!4, q%!20)

PROCicon_set_shaded(MainWindHandle%, MainWindFileNameIcon%, FALSE)
PROCicon_set_shaded(MainWindHandle%, MainWindFileSprIcon%, FALSE)
PROCicon_set_shaded(MainWindHandle%, MainWindOKIcon%, FALSE)
PROCicon_set_shaded(MainWindHandle%, MainWindOwnerIcon%, filetype% = -1)
PROCicon_set_shaded(MainWindHandle%, MainWindFileTypeIcon%, filetype% = -1)
ENDPROC


REM Get the current filename from the filename field.
REM
REM \return		The filename in the field.
:
DEF FNmain_wind_get_filename
=FNicon_get_text(MainWindHandle%, MainWindFileNameIcon%)


REM Set the protocol message field to an error message, and enlarge the
REM window to show it.
REM
REM \param token$	The error message token to display
:
DEF PROCmain_wind_set_proto_error(token$)
LOCAL background%, message$

message$ = FNmessage_lookup(token$)
PROCicon_set_indirected_text(MainWindHandle%, MainWindProtoIcon%, message$)

background% = FNicon_background_colour(MainWindHandle%, MainWindProtoIcon%)
PROCicon_set_colours(MainWindHandle%, MainWindProtoIcon%, 11, background%)

REM If the window is already open, bring it to the front and enlarge it
REM to show the protocol message field.

q%!0 = MainWindHandle%
SYS "Wimp_GetWindowState",, q%

IF q%!32 AND (1 << 16) THEN
	q%!8 -= 128
	q%!28 = -1
	SYS "Wimp_OpenWindow",, q%
ENDIF
ENDPROC


REM Set the protocol message field to a standard message.
REM
REM \param token$	The message token to display
:
DEF PROCmain_wind_set_proto_message(token$)
LOCAL background%, message$

message$ = FNmessage_lookup(token$)
PROCicon_set_indirected_text(MainWindHandle%, MainWindProtoIcon%, message$)

background% = FNicon_background_colour(MainWindHandle%, MainWindProtoIcon%)
PROCicon_set_colours(MainWindHandle%, MainWindProtoIcon%, 7, background%)
ENDPROC


REM Process drags on a file save icon.
REM
REM \param window%	The handle of the window.
REM \param icon%	The handle of the icon.
:
DEF PROCmain_wind_drag_icon(!q%, q%!4)
LOCAL minx%, miny%, maxx%, maxy%, xoff%

SYS "Wimp_GetIconState",,q%

minx% = q%!8
miny% = q%!12
maxx% = q%!16
maxy% = q%!20

SYS "Wimp_GetWindowState",,q%

xoff% = q%!4

q%!0 = minx% + xoff%
q%!4 = miny% + q%!16
q%!8 = maxx% + xoff%
q%!12 = maxy% + q%!16

SYS "DragASprite_Start", %11000101, 1, FNtypes_sprite_from_type(ClipboardCurrentType%), q%
ENDPROC


REM Handle User Drag Box events, signalling the end of a drag
REM for our file icon.
REM On entry, b% is assumed to point to the Wimp_Poll block.
|
DEF PROCmain_window_drag_box
SYS "DragASprite_Stop"
SYS "Wimp_GetPointerInfo",,b%
IF b%!12 = MainWindHandle% THEN ENDPROC
PROCclipboard_start_drag_save(b%!0, b%!4, FNstring_leafname(FNmain_wind_get_filename), b%!12, b%!16)
ENDPROC
