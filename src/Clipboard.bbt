REM >Prog:!Clipboard.!RunImage
REM
REM Version 0.12 - Email, Web and Help links added to iconbar menu & info window - SF.

LIBRARY "BASIC:Icon"
LIBRARY "BASIC:Menu"
LIBRARY "BASIC:Message"
LIBRARY "BASIC:Resources"
LIBRARY "BASIC:String"
LIBRARY "BASIC:Template"
LIBRARY "BASIC:Url"
LIBRARY "BASIC:WimpError"
LIBRARY "BASIC:Window"

LIBRARY "src/InfoWind.bbt"
LIBRARY "src/MainWind.bbt"

REM These values get replaced by tokenize.

BuildVersion$ = "1.10"
BuildDate$ = "01 Jul 2009"

REM Allocate the Wimp memory blocks.

DIM block 1024, scrap 256, a% 255
b% = block : q% = scrap

REM Configure the basic error handling for initialisation.

PROCwimperror_initialise("Clipboard", "!clipboard")
ON ERROR result% = FNwimperror_program : END

REM Locate the application resources.

Resources$ = FNresources_find_territory_folder("<Clipboard$Dir>.Resources")

REM Load the messages file.

PROCmessage_initialise(Resources$ + "Messages")

TaskName$ = FNmessage_lookup("TaskName")
TaskSprite$ = FNmessage_lookup("TaskSpr")
PROCwimperror_initialise(TaskName$, TaskSprite$)

InternalHandle% = -&11223344

DIM TASK 5
$TASK="TASK"
SYS "Wimp_Initialise", 200, !TASK, TaskName$ TO ,TaskHandle%

PROCtemplate_open(Resources$ + "Templates")
PROCinfo_wind_initialise
PROCmain_wind_initialise
PROCtemplate_close

REM Create the iconbar icon

block!0=-1
block!4=0
block!8=0
block!12=76
block!16=68
block!20=%11000000011010
$(block+24)=TaskSprite$
SYS "Wimp_CreateIcon",,block
SaveDragTo%=-1
Quit%=FALSE:Owner%=-1:OurFile$="":SaveRef%=-1:SaveDragRef%=-1

REM Initialise and load the menu templates

PROCmenu_initialise

block!0 = InfoWindHandle%
PROCmenu_load_templates(Resources$ + "Menus", block)
IconbarMenu% = block!0

REM Clipboard state data.

ClipboardCurrentType% = -1

REM Check the clipboard contents.

PROCexamine_clipboard

REM Poll the Wimp until exit.

ON ERROR Quit% = FNwimperror_program

WHILE NOT Quit%
	SYS "Wimp_Poll", %110001, b% TO Reason%
	CASE Reason% OF
	WHEN 2:		SYS "Wimp_OpenWindow",,block
	WHEN 3:		SYS "Wimp_CloseWindow",,block
	WHEN 6:		IF block!8<>2 THEN PROCmouse_click ELSE PROCmenu
	WHEN 7:		PROCuser_drag_box
	WHEN 8:		IF block!24=13 THEN
				PROCsave_clipboard(FNicon_get_text(3),TRUE,FALSE)
			ELSE
				IF block!24=&1B THEN
					PROCmain_wind_close
				ELSE
					SYS "Wimp_ProcessKey", block!24
				ENDIF
			ENDIF
	WHEN 9 :	IF block!0=1 THEN OSCLI("Filer_Run <Clipboard$Dir>.!Help")
			IF block!0=2 THEN Quit%=TRUE
	WHEN 17,18 :	PROCclipper_process_message
	WHEN 19 :	PROCclipper_process_bounce
	ENDCASE
ENDWHILE

SYS "Wimp_CloseDown", TaskHandle%, !TASK
SYS "OS_Exit"
END

REM Handle incoming Wimp messages.
REM On entry, b% is assumed to point to the Wimp_Poll block.
:
DEF PROCclipper_process_message
LOCAL flags%

CASE b%!16 OF
WHEN 0 : REM Message_Quit
	Quit%=TRUE

WHEN 1 : REM Message_DataSave
	IF b%!12 = SaveRef% THEN PROCsave_ack_to(SavePath$) : ENDPROC

	IF b%!12 = MyRef% OR b%!24 = InternalHandle% THEN
		IF b%!12 <> MyRef% THEN
			PROCmain_wind_set_proto_error("BadYourRef")
		ELSE
			IF b%!24 <> InternalHandle% THEN
				PROCmain_wind_set_proto_error("BadHandle")
			ELSE
				PROCmain_wind_set_proto_message("FoundOwner")
			ENDIF
		ENDIF

		Owner% = b%!4
		ClipboardCurrentType% = b%!40
		PROCmain_wind_set_content(FNstring_read(b%+44), FNname(b%!4), ClipboardCurrentType%)
	ENDIF

WHEN 2 : REM Message_DataSaveAck
	IF block!12=SaveDragRef% THEN
		REM Dragged-to app wants the file - grab it from clip owner
		SaveDragRef% = b%!8

		REM Ack the message whatever happens
		b%!12 = SaveDragRef%
		SYS "Wimp_SendMessage", 19, b%, b%!4

		PROCsave_clipboard(FNstring_read(b%+44), FALSE, TRUE)

		REM If we own the clipboard, send the ack now.

		IF Owner% = TaskHandle% THEN PROCsend_save_ack
	ELSE
		PROCcopy(OurFile$, FNstring_read(b%+44))
		Request% = b%!4
		b%!12 = b%!8
		b%!16 = 3
		SYS "XOS_File", 23, OurFile$ TO Ob%,,,,Size%,,Type% ;flags%
		IF (flags% AND %1) OR (Ob% <> 1) THEN
			PROCmain_wind_set_proto_error("BadClipFile")
		ELSE
			b%!36 = Size%
			b%!40 = Type%
			SYS "Wimp_SendMessage", 17, b%, Request%
		ENDIF
	ENDIF

WHEN 3 : REM Message_DataLoad
	IF b%!12 = SaveRef% THEN
		IF SaveDragTo% <> -1 THEN
			SaveDragFrom% = b%!4
			SaveFromRef% = b%!8

			REM Ack the message

			b%!12 = b%!8
			SYS "Wimp_SendMessage", 19, b%, SaveDragFrom%

			REM Pass message on to dest app

			b%!12 = SaveDragRef%
			SYS "Wimp_SendMessage", 18, b%, SaveDragTo%
			SaveDragRef% = b%!8
			PROCmain_wind_set_proto_message("AskToLoad")
		ENDIF
	ELSE
		PROCclaim_clipboard
		OurFile$ = FNstring_read(b%+44)
		Owner% = TaskHandle%
		ClipboardCurrentType% = b%!40
		PROCmain_wind_set_content(OurFile$, TaskName$, ClipboardCurrentType%)
		PROCmain_wind_set_proto_message("ItsOurs")

		PROCfront(MainWindow%)
	ENDIF

WHEN 4 : REM Message_DataLoadAck
	IF SaveDragTo% <> -1 THEN
		b%!12 = SaveFromRef%
		SYS "Wimp_SendMessage", 17, b%, SaveDragFrom%
		SaveDragTo% = -1
	ENDIF

WHEN &F : REM Message_ClaimEntity
	IF (b%!20 AND 4) THEN
		IF b%!4 <> TaskHandle% THEN
			Owner% = -1
			PROCexamine_clipboard
		ENDIF
	ENDIF

WHEN &10 : REM Message_DataRequest
	IF MyRef% <> b%!8 THEN
		IF Owner% = TaskHandle% THEN
			PROCmain_wind_set_proto_message("SendingData")
			Request% = b%!4
			b%!12 = b%!8
			SYS "Wimp_SendMessage", 19, b%

			SYS "XOS_File", 23, OurFile$ TO Ob%,,,,Size%,,Type% ;flags%
			IF (flags% AND %1) OR (Ob% <> 1) THEN
				PROCreport("Bad clipboard file")
			ELSE
				b%!36 = Size%
				b%!16 = 1
				b%!40 = Type%
				Leaf$ = FNleaf(OurFile$)
				$(b%+44) = Leaf$ + CHR$(0)
				b%!0 = 44 + (LEN(Leaf$) + 4) AND &FC
				SYS "Wimp_SendMessage", 17, b%, Request%
			ENDIF
		ENDIF
	ENDIF
ENDCASE
ENDPROC


REM Handle boinced Wimp messages.
REM On entry, b% is assumed to point to the Wimp_Poll block.
:
DEF PROCclipper_process_bounce
CASE b%!16 OF
WHEN &4E383, &4AF80 : REM Message_URIReturnResult, Message_InetSuiteOpenURL
	PROCurl_bounce(block)
	ENDPROC

WHEN 4 : REM Message_DataLoadAck
	PROCmain_wind_set_proto_error("RecDied")
	SaveDragTo% = -1
	ENDPROC

OTHERWISE
	IF b%!8 = SaveDragRef% THEN
		PROCmain_wind_set_proto_message("NoInterest")
		ENDPROC
	ENDIF
	IF b%!8 <> MyRef% THEN ENDPROC
	IF b%!16 <> &10 THEN ENDPROC

	Owner% = -1
	ClipboardCurrentType% = -1

	PROCmain_wind_set_content("None", "-", ClipboardCurrentType%)
	PROCmain_wind_set_proto_message("NoClipboard")
ENDPROC


DEF PROCexamine_clipboard
IF Owner%=TaskHandle% THEN ENDPROC
block!0=44
block!12=0
block!16=&10
block!20=MainWindow%
block!24=InternalHandle% : REM Help find protocol errors.
block!36=4
block!40=-1
SYS "Wimp_SendMessage",18,block,0
MyRef%=block!8
PROCmain_wind_set_proto_message("SearchOwner")
ENDPROC

DEF FNname(handle%)
SYS "XTaskManager_TaskNameFromHandle",handle% TO NamePtr% ;Flags%
IF Flags% AND 1 THEN ="???"
=FNstring_read(NamePtr%)

DEF PROCset_ind(Icon%,Text$)
IF LEN(Text$)<>12 THEN Text$="sfile_xxx;r2"
block!512=MainWindow%
block!516=Icon%
SYS "Wimp_GetIconState",,block+512
Addr%=block!(32+512)
$Addr%=Text$
ENDPROC

DEF PROCmouse_click
CASE b%!12 OF
  WHEN -2         : PROCtoggle(MainWindow%)
  WHEN MainWindow%: IF block!16=4 THEN PROCsave_clipboard(FNicon_get_text(3),-1,0)
                    IF block!16=0 THEN PROCdrag_icon(0)
WHEN InfoWindHandle%
	PROCinfo_wind_click(b%!8, b%!16)
ENDCASE
ENDPROC

DEF PROCmenu
IF block!12=-2 THEN
	PROCmenu_create_iconbar(IconbarMenu%, block!0)
ELSE
	PROCmenu_create(IconbarMenu%, block!0, block!4)
ENDIF
ENDPROC

DEF PROCfront(Window%)
block!512=Window%
SYS "Wimp_GetWindowState",,block+512
block!(512+28)=-1
SYS "Wimp_OpenWindow",,block+512
PROCput_caret_in(3)
ENDPROC

DEF PROCtoggle(Window%)
block!512=Window%
SYS "Wimp_GetWindowState",,block+512
IF block!(512+32) AND (1<<17) THEN
  SYS "Wimp_CloseWindow",,block+512
ELSE
  block!(512+28)=-1
  SYS "Wimp_OpenWindow",,block+512
  PROCput_caret_in(3)
  PROCexamine_clipboard
ENDIF
ENDPROC

DEF PROCclaim_clipboard
bk=block+512
!bk=24
bk!12=0
bk!16=&f
bk!20=%100
SYS "Wimp_SendMessage",18,bk,0
ENDPROC

DEF PROCreport(Error$)
block!512=0
$(block+516)=Error$
SYS "Wimp_ReportError",block+512,%101,TaskName$
ENDPROC

DEF FNleaf(Text$)
Dot%=0
FOR A%=1 TO LEN(Text$)
  IF MID$(Text$,A%,1)="." THEN Dot%=A%
NEXT A%
=MID$(Text$,Dot%+1)

DEF PROCsave_clipboard(S$,Check%,UseWindow%)
SavePath$=S$
IF Check% AND INSTR(SavePath$,".")=0 THEN PROCreport("To save, drag icon to a directory viewer"):ENDPROC
IF Owner%=TaskHandle% THEN PROCcopy(OurFile$, SavePath$):ENDPROC
block!0=44
block!12=0
block!16=&10 : REM Request clipboard data
IF UseWindow% = FALSE THEN
  block!20=-3
  block!24=InternalHandle%
  block!28=640
  block!32=512
ENDIF
block!36=4
block!40=-1
SYS "Wimp_SendMessage",18,block,Owner%
SaveRef%=block!8
PROCmain_wind_set_proto_message("AskToSave")
ENDPROC

DEF PROCsave_ack_to(path$)
Request%=block!4
block!12=block!8
block!16=2 : REM Please save file to SavePath$
$(block+44)=path$+CHR$0
block!0=(LEN(path$)+48) AND &FC
SYS "Wimp_SendMessage",17,block,Request%
SaveRef%=block!8
ENDPROC

DEF PROCput_caret_in(Icon%)
block!512=MainWindow%
block!516=Icon%
SYS "Wimp_GetIconState",,block+512
IF block!(512+24) AND (1<<22) THEN ENDPROC
SYS "Wimp_SetCaretPosition",MainWindow%,Icon%,&10000,0,-1,-1
ENDPROC

DEF PROCdrag_icon(Icon%)
bk=block+512
bk!0=MainWindow%
bk!4=Icon%
SYS "Wimp_GetIconState",,bk
MinX%=bk!8
MinY%=bk!12
MaxX%=bk!16
MaxY%=bk!20
SYS "Wimp_GetWindowState",,bk
Xoff%=bk!4
bk!0=MinX%+Xoff%
bk!4=MinY%+bk!16
bk!8=MaxX%+Xoff%
bk!12=MaxY%+bk!16
SYS "DragASprite_Start",%11000101,1,FNclipboard_sprite_from_type(ClipboardCurrentType%),bk
ENDPROC

DEF PROCuser_drag_box
SYS "DragASprite_Stop"
SYS "Wimp_GetPointerInfo",,block
IF block!12=MainWindow% THEN ENDPROC
DestWin%=block!12
DestIcon%=block!16
Name$=FNleaf(FNicon_get_text(3))
block!28=block!0
block!32=block!4
block!0=(48+LEN(Name$)) AND &FC
block!12=0
block!16=1 : REM Ask dest app if it wants the file
block!20=DestWin%
block!24=DestIcon%
block!36=0
block!40=ClipboardCurrentType%
$(block+44)=Name$+CHR$0
SYS "Wimp_SendMessage",18,block,DestWin%,DestIcon% TO ,,SaveDragTo%
SaveDragRef%=block!8
PROCmain_wind_set_proto_message("OfferData")
ENDPROC

DEF PROCsend_save_ack
block!12=SaveDragRef%
block!16=3 : REM File can now be loaded
SYS "Wimp_SendMessage",17,block,SaveDragTo%
SaveDragTo%=-1
ENDPROC

DEF PROCcopy(From$, To$)
SYS "XOS_FSControl", 26, From$, To$, %10 TO r0 ;v%

IF v% AND 1 THEN SYS "Wimp_ReportError", r0, %101, TaskName$
ENDPROC

DEF FNclipboard_sprite_from_type(filetype%)
IF filetype% < 0 OR filetype% > &FFF THEN = "file_xxx"
="file_" + RIGHT$("000" + STR$~(filetype%), 3)

DEF FNclipboard_name_from_type(filetype%)
LOCAL hex$, len%, flags%

hex$ = STR$~(filetype%)

SYS "XOS_ReadVarVal", "File$Type_"+hex$, q%, 256, 0, 3 TO ,,len%; flags%
IF flags% AND 1 THEN =hex$

q%?len% = 0
=FNstring_read(q%)
